parameters:
  - name: appId
    displayName: Bot App Id
    type: string
  
  - name: appInsight
    displayName: Application Insight
    type: string

  - name: appSecret
    displayName: Bot App Secret
    type: string

  - name: appServicePlan
    displayName: App Service Plan
    type: string

  - name: appServicePlanRG
    displayName: App Service Plan Resource Group
    type: string

  - name: azureSubscription
    displayName: Azure Subscription
    type: string

  - name: botGroup
    displayName: Bot Group
    type: string

  - name: botName
    displayName: Bot Name
    type: string

  - name: botPricingTier
    displayName: Bot Pricing Tier
    type: string
    values:
    - S1
    - F0

  - name: templateFile
    displayName: Tempate File Location
    type: string

  - name: resourceSuffix
    displayName: Resource Suffix
    type: string

steps:
  - task: AzureCLI@2
    displayName: "Create resources"
    inputs:
      azureSubscription: "${{ parameters.azureSubscription }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Set-PSDebug -Trace 1

        $botPricingTier = if(-not ([string]::IsNullOrEmpty("${{ parameters.botPricingTier }}"))) { "botSku=${{ parameters.botPricingTier }}" };
        $appInsights = if(-not ([string]::IsNullOrEmpty("${{ parameters.appInsight }}"))) { "appInsightsName=${{ parameters.appInsight }}" }

        az deployment group create --resource-group "${{ parameters.botGroup }}" --name "${{ parameters.botName }}${{ parameters.resourceSuffix }}-$(Build.BuildId)" --template-file ${{ parameters.templateFile }} --parameters $botPricingTier botLocation="westus" appId="${{ parameters.appId }}" appSecret="${{ parameters.appSecret }}" botName="${{ parameters.botName }}${{ parameters.resourceSuffix }}-$(Build.BuildId)" appServicePlanName="${{ parameters.appServicePlan }}" appServicePlanResourceGroup="${{ parameters.appServicePlanRG }}" $appInsights;

        Set-PSDebug -Trace 0
